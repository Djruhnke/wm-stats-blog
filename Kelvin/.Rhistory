#combine <- ddply(.data = df7, .variables = .(Frequency), mutate,
#Average = SMA(Frequency, n=3))
df1 <- subset(df1, !( Methodology=="No"))
df2 <- subset(df2, !( Methodology=="No"))
df3 <- subset(df3, !( Methodology=="No"))
df4 <- subset(df4, !( Methodology=="No"))
df5 <- subset(df5, !( Methodology=="No"))
df6 <- subset(df6, !( Methodology=="No"))
df7 <- subset(df7, !( Methodology=="No"))
df8 <- subset(df8, !( Methodology=="No"))
d1 <- loess(Proportion ~ year, df1)
df1$Predict <- predict(d1, df1)
d2 <- loess(Proportion ~ year, df2)
df2$Predict <- predict(d2, df2)
d3 <- loess(Proportion ~ year, df3)
df3$Predict <- predict(d3, df3)
d4 <- loess(Proportion ~ year, df4)
df4$Predict <- predict(d4, df4)
d5 <- loess(Proportion ~ year, df5)
df5$Predict <- predict(d5, df5)
d6 <- loess(Proportion ~ year, df6)
df6$Predict <- predict(d6, df6)
d7 <- loess(Proportion ~ year, df7)
df7$Predict <- predict(d7, df7)
d8 <- loess(Proportion ~ year, df8)
df8$Predict <- predict(d8, df8)
df9 <- rbind.fill(df1[c("year", "Methodology", "Frequency", "Proportion", "Predict")], df2[c("year", "Methodology", "Frequency", "Proportion", "Predict")],
df3[c("year", "Methodology", "Frequency", "Proportion", "Predict")], df4[c("year", "Methodology", "Frequency", "Proportion", "Predict")],
df5[c("year", "Methodology", "Frequency", "Proportion", "Predict")], df6[c("year", "Methodology", "Frequency", "Proportion", "Predict")],
df7[c("year", "Methodology", "Frequency", "Proportion", "Predict")], df8[c("year", "Methodology", "Frequency", "Proportion", "Predict")])
df9$Methodology <- revalue(df9$Methodology, c("FormalModeling" = "Formal",
"AnalyticNonFormal" = "Analytic/Non-Formal",
"PolicyAnalysis" = "Policy Analysis"))
df9$Methodology <- factor(df9$Methodology, levels = c("Quantitative", "Qualitative",
"Formal", "Experimental",
"Descriptive", "Counterfactual",
"Policy Analysis", "Analytic/Non-Formal"))
M <- gvisMotionChart(df9, idvar="Methodology", timevar="year", xvar="Predict")
plot(M)
############################
###Create map of methods to merge###
df <- read.csv("/Users/kelvinabrokwa/Documents/R/Cornut.Data.2011.csv")
names(df)[names(df) == "qg705"] <- "Methodology"
df <- subset(df, select = c(country, Methodology))
df <- df[!(df$Methodology %in% c("")),]
df <- count(df, vars = c("country", "Methodology"))
names(df)[names(df) == "freq"] <- "Frequency"
df <- ddply(.data = df, .variables = .(country), mutate,
Proportion = Frequency/sum(Frequency))
#df1 <- df[(df$Paradigm %in% "Realism"),]
G <- gvisGeoMap(df, locationvar='country' ,numvar='Proportion', hovervar="Methodology",
options=list(dataMode='markers', showZoomOut = FALSE,
colorAxis="{values:[100,250,650,1000],
colors:[\'red', \'pink\', \'orange',\'green']}"))
plot(G)
GM <- gvisMerge(G, M, horizontal=TRUE,
tableOptions="bgcolor=\"#CCCCCC\" cellspacing=10")
plot(GM)
A <- gvisGeoMap(df, locationvar='country' ,numvar='Proportion', hovervar="Methodology",
options=list(dataMode='regions', datamode = "markers", showZoomOut = FALSE,
colorAxis="{values:[100,250,650,1000],
colors:[\'red', \'pink\', \'orange',\'green']}"))
plot(A)
library(googleVis)
demo(googleVis)
))
)
))
df <- data.frame(label=c("US", "GB", "BR"), val1=c(1,3,4), val2=c(23,12,32))
Line <- gvisLineChart(df, xvar="label", yvar=c("val1","val2"),
options=list(title="Hello World", legend="bottom",
titleTextStyle="{color:'red', fontSize:18}",
vAxis="{gridlines:{color:'red', count:3}}",
hAxis="{title:'My Label', titleTextStyle:{color:'blue'}}",
series="[{color:'green', targetAxisIndex: 0},
{color: 'blue',targetAxisIndex:1}]",
vAxes="[{title:'Value 1 (%)', format:'##,######%'},
{title:'Value 2 (\U00A3)'}]",
curveType="function", width=500, height=300
))
library("googleVis", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
df <- data.frame(label=c("US", "GB", "BR"), val1=c(1,3,4), val2=c(23,12,32))
Line <- gvisLineChart(df, xvar="label", yvar=c("val1","val2"),
options=list(title="Hello World", legend="bottom",
titleTextStyle="{color:'red', fontSize:18}",
vAxis="{gridlines:{color:'red', count:3}}",
hAxis="{title:'My Label', titleTextStyle:{color:'blue'}}",
series="[{color:'green', targetAxisIndex: 0},
{color: 'blue',targetAxisIndex:1}]",
vAxes="[{title:'Value 1 (%)', format:'##,######%'},
{title:'Value 2 (\U00A3)'}]",
curveType="function", width=500, height=300
))
))
df <- data.frame(label=c("US", "GB", "BR"), val1=c(1,3,4), val2=c(23,12,32))
Line <- gvisLineChart(df, xvar="label", yvar=c("val1","val2"),
options=list(title="Hello World", legend="bottom",
titleTextStyle="{color:'red', fontSize:18}",
vAxis="{gridlines:{color:'red', count:3}}",
hAxis="{title:'My Label', titleTextStyle:{color:'blue'}}",
series="[{color:'green', targetAxisIndex: 0},
{color: 'blue',targetAxisIndex:1}]",
vAxes="[{title:'Value 1 (%)', format:'##,######%'},
{title:'Value 2 (\U00A3)'}]",
curveType="function", width=500, height=300
df <- data.frame(label=c("US", "GB", "BR"), val1=c(1,3,4), val2=c(23,12,32))
Line <- gvisLineChart(df, xvar="label", yvar=c("val1","val2"),
options=list(title="Hello World", legend="bottom",
titleTextStyle="{color:'red', fontSize:18}",
vAxis="{gridlines:{color:'red', count:3}}",
hAxis="{title:'My Label', titleTextStyle:{color:'blue'}}",
series="[{color:'green', targetAxisIndex: 0},
{color: 'blue',targetAxisIndex:1}]",
vAxes="[{title:'Value 1 (%)', format:'##,######%'},
{title:'Value 2 (\U00A3)'}]",
curveType="function", width=500, height=300))
df <- data.frame(label=c("US", "GB", "BR"), val1=c(1,3,4), val2=c(23,12,32))
Line <- gvisLineChart(df, xvar="label", yvar=c("val1","val2"),
options=list(title="Hello World", legend="bottom",
titleTextStyle="{color:'red', fontSize:18}",
vAxis="{gridlines:{color:'red', count:3}}",
hAxis="{title:'My Label', titleTextStyle:{color:'blue'}}",
series="[{color:'green', targetAxisIndex: 0},
{color: 'blue',targetAxisIndex:1}]",
vAxes="[{title:'Value 1 (%)', format:'##,######%'},
{title:'Value 2 (\U00A3)'}]",
curveType="function", width=500, height=300))
plot(Line)
df <- data.frame(label=c("US", "GB", "BR"), val1=c(1,3,4), val2=c(23,12,32))
Line <- gvisLineChart(df, xvar="label", yvar=c("val1","val2"),
options=list(title="Hello World", legend="bottom",
titleTextStyle="{color:'red', fontSize:18}",
vAxis="{gridlines:{color:'red', count:3}}",
hAxis="{title:'My Label', titleTextStyle:{color:'blue'}}",
series="[{color:'green', targetAxisIndex: 0},
{color: 'blue',targetAxisIndex:1}]",
vAxes="[{title:'Value 1 (%)', format:'##,######%'},
{title:'Value 2 (\U00A3)'}]",
curveType="function", width=500, height=300))
plot(Line)
library("googleVis", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
df <- data.frame(label=c("US", "GB", "BR"), val1=c(1,3,4), val2=c(23,12,32))
Line <- gvisLineChart(df, xvar="label", yvar=c("val1","val2"),
options=list(title="Hello World", legend="bottom",
titleTextStyle="{color:'red', fontSize:18}",
vAxis="{gridlines:{color:'red', count:3}}",
hAxis="{title:'My Label', titleTextStyle:{color:'blue'}}",
series="[{color:'green', targetAxisIndex: 0},
{color: 'blue',targetAxisIndex:1}]",
vAxes="[{title:'Value 1 (%)', format:'##,######%'},
{title:'Value 2 (\U00A3)'}]",
curveType="function", width=500, height=300))
plot(Line)
df <- data.frame(label=c("US", "GB", "BR"), val1=c(1,3,4), val2=c(23,12,32))
Line <- gvisLineChart(df, xvar="label", yvar=c("val1","val2"),
options=list(title="Hello World", legend="bottom",
titleTextStyle="{color:'red', fontSize:18}",
vAxis="{gridlines:{color:'red', count:3}}",
hAxis="{title:'My Label', titleTextStyle:{color:'blue'}}",
series="[{color:'green', targetAxisIndex: 0},
{color: 'blue',targetAxisIndex:1}]",
vAxes="[{title:'Value 1 (%)', format:'##,######%'},
{title:'Value 2 (\U00A3)'}]",
curveType="function", width=500, height=300))
plot(Line)
library(googleVis)
library(googleVis)
library(zoo)
library(dplyr)
library(plyr)
df <- read.csv("/Users/kelvinabrokwa/Documents/R/Journal Article Database 1.0.csv")
###############Basic motion polt##################
df <- subset(df, select = c(year, Quantitative, Qualitative, FormalModeling, Counterfactual,
AnalyticNonFormal, PolicyAnalysis, Experimental, Descriptive ))
df$Quantitative <- ifelse(df$Quantitative == "Yes", c("Quantitative"), c("No"))
df$Qualitative <- ifelse(df$Qualitative == "Yes", c("Qualitative"), c("No"))
df$FormalModeling <- ifelse(df$FormalModeling == "Yes", c("FormalModeling"), c("No"))
df$Counterfactual <- ifelse(df$Counterfactual == "Yes", c("Counterfactual"), c("No"))
df$AnalyticNonFormal <- ifelse(df$AnalyticNonFormal == "Yes", c("AnalyticNonFormal"), c("No"))
df$Descriptive <- ifelse(df$Descriptive == "Yes", c("Descriptive"), c("No"))
df$PolicyAnalysis <- ifelse(df$PolicyAnalysis == "Yes", c("PolicyAnalysis"), c("No"))
df$Experimental <- ifelse(df$Experimental == "Yes", c("Experimental"), c("No"))
df1 <- count(df, vars = c("year", "Quantitative"))
df2 <- count(df, vars = c("year", "Qualitative"))
df3 <- count(df, vars = c("year", "FormalModeling"))
df4 <- count(df, vars = c("year", "Counterfactual"))
df5 <- count(df, vars = c("year", "AnalyticNonFormal"))
df6 <- count(df, vars = c("year", "Descriptive"))
df7 <- count(df, vars = c("year", "PolicyAnalysis"))
df8 <- count(df, vars = c("year", "Experimental"))
names(df1)[names(df1) == "freq"] <- "Frequency"
names(df2)[names(df2) == "freq"] <- "Frequency"
names(df3)[names(df3) == "freq"] <- "Frequency"
names(df4)[names(df4) == "freq"] <- "Frequency"
names(df5)[names(df5) == "freq"] <- "Frequency"
names(df6)[names(df6) == "freq"] <- "Frequency"
names(df7)[names(df7) == "freq"] <- "Frequency"
names(df8)[names(df8) == "freq"] <- "Frequency"
names(df1)[names(df1) == "Quantitative"] <- "Methodology"
names(df2)[names(df2) == "Qualitative"] <- "Methodology"
names(df3)[names(df3) == "FormalModeling"] <- "Methodology"
names(df4)[names(df4) == "Counterfactual"] <- "Methodology"
names(df5)[names(df5) == "AnalyticNonFormal"] <- "Methodology"
names(df6)[names(df6) == "Descriptive"] <- "Methodology"
names(df7)[names(df7) == "PolicyAnalysis"] <- "Methodology"
names(df8)[names(df8) == "Experimental"] <- "Methodology"
df1 <- ddply(.data = df1, .variables = .(year), mutate,
Proportion = Frequency/sum(Frequency))
df2 <- ddply(.data = df2, .variables = .(year), mutate,
Proportion = Frequency/sum(Frequency))
df3 <- ddply(.data = df3, .variables = .(year), mutate,
Proportion = Frequency/sum(Frequency))
df4 <- ddply(.data = df4, .variables = .(year), mutate,
Proportion = Frequency/sum(Frequency))
df5 <- ddply(.data = df5, .variables = .(year), mutate,
Proportion = Frequency/sum(Frequency))
df6 <- ddply(.data = df6, .variables = .(year), mutate,
Proportion = Frequency/sum(Frequency))
df7 <- ddply(.data = df7, .variables = .(year), mutate,
Proportion = Frequency/sum(Frequency))
df8 <- ddply(.data = df8, .variables = .(year), mutate,
Proportion = Frequency/sum(Frequency))
#combine <- ddply(.data = df7, .variables = .(Frequency), mutate,
#Average = SMA(Frequency, n=3))
df1 <- subset(df1, !( Methodology=="No"))
df2 <- subset(df2, !( Methodology=="No"))
df3 <- subset(df3, !( Methodology=="No"))
df4 <- subset(df4, !( Methodology=="No"))
df5 <- subset(df5, !( Methodology=="No"))
df6 <- subset(df6, !( Methodology=="No"))
df7 <- subset(df7, !( Methodology=="No"))
df8 <- subset(df8, !( Methodology=="No"))
d1 <- loess(Proportion ~ year, df1)
df1$Predict <- predict(d1, df1)
d2 <- loess(Proportion ~ year, df2)
df2$Predict <- predict(d2, df2)
d3 <- loess(Proportion ~ year, df3)
df3$Predict <- predict(d3, df3)
d4 <- loess(Proportion ~ year, df4)
df4$Predict <- predict(d4, df4)
d5 <- loess(Proportion ~ year, df5)
df5$Predict <- predict(d5, df5)
d6 <- loess(Proportion ~ year, df6)
df6$Predict <- predict(d6, df6)
d7 <- loess(Proportion ~ year, df7)
df7$Predict <- predict(d7, df7)
d8 <- loess(Proportion ~ year, df8)
df8$Predict <- predict(d8, df8)
df9 <- rbind.fill(df1[c("year", "Methodology", "Frequency", "Proportion", "Predict")], df2[c("year", "Methodology", "Frequency", "Proportion", "Predict")],
df3[c("year", "Methodology", "Frequency", "Proportion", "Predict")], df4[c("year", "Methodology", "Frequency", "Proportion", "Predict")],
df5[c("year", "Methodology", "Frequency", "Proportion", "Predict")], df6[c("year", "Methodology", "Frequency", "Proportion", "Predict")],
df7[c("year", "Methodology", "Frequency", "Proportion", "Predict")], df8[c("year", "Methodology", "Frequency", "Proportion", "Predict")])
df9$Methodology <- revalue(df9$Methodology, c("FormalModeling" = "Formal",
"AnalyticNonFormal" = "Analytic/Non-Formal",
"PolicyAnalysis" = "Policy Analysis"))
df9$Methodology <- factor(df9$Methodology, levels = c("Quantitative", "Qualitative",
"Formal", "Experimental",
"Descriptive", "Counterfactual",
"Policy Analysis", "Analytic/Non-Formal"))
M <- gvisMotionChart(df9, idvar="Methodology", timevar="year", xvar="Predict")
plot(M)
############################
###Create map of methods to merge###
df <- read.csv("/Users/kelvinabrokwa/Documents/R/Cornut.Data.2011.csv")
names(df)[names(df) == "qg705"] <- "Methodology"
df <- subset(df, select = c(country, Methodology))
df <- df[!(df$Methodology %in% c("")),]
df <- count(df, vars = c("country", "Methodology"))
names(df)[names(df) == "freq"] <- "Frequency"
df <- ddply(.data = df, .variables = .(country), mutate,
Proportion = Frequency/sum(Frequency))
#df1 <- df[(df$Paradigm %in% "Realism"),]
G <- gvisGeoMap(df, locationvar='country' ,numvar='Proportion', hovervar="Methodology",
options=list(dataMode='markers', showZoomOut = FALSE,
colorAxis="{values:[100,250,650,1000],
colors:[\'red', \'pink\', \'orange',\'green']}"))
plot(G)
GM <- gvisMerge(G, M, horizontal=TRUE,
tableOptions="bgcolor=\"#CCCCCC\" cellspacing=10")
plot(GM)
A <- gvisGeoMap(df, locationvar='country' ,numvar='Proportion', hovervar="Methodology",
options=list(dataMode='regions', datamode = "markers", showZoomOut = FALSE,
colorAxis="{values:[100,250,650,1000],
colors:[\'red', \'pink\', \'orange',\'green']}"))
plot(A)
library("googleVis", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
getwd()
setwd('/Users/kelvinabrokwa/documents/repositories/wm-stats-blog/kelvin')
getwd()
print(data)
data <- ('agg_data_1.csv')
print(data)
data <- df('agg_data_1.csv')
data <- read.csv('agg_data_1.csv')
print(data)
data <- read.csv('agg_data_1.csv')
data <- read.csv(file='agg_data_1.csv')
data <- read.csv(file='agg_data_1.csv', header=TRUE)
data <- read.csv('agg_data_1.csv', header=TRUE)
data
data <- read.csv('agg_data_1.csv', header=TRUE)
data_no_label <- c(data[1:])
print(data_no_label)
data <- read.csv('agg_data_1.csv', header=TRUE)
data_no_label <- c(data(X2002.03,Z2013.14))
print(data_no_label)
data <- read.csv('agg_data_1.csv', header=TRUE)
data <- data.frame(data)
data_no_label <- c(data(X2002.03,Z2013.14))
print(data_no_label)
data <- read.csv('agg_data_1.csv', header=TRUE)
data <- data.frame(data)
data_no_label <- c(data(X2002.03,Z2013.14))
print(data_no_label)
data1 <- read.csv('agg_data_1.csv', header=TRUE)
data <- data.frame(data1)
print(data)
data1 <- read.csv('agg_data_1.csv', header=TRUE)
data2 <- data.frame(data1)
data3 <-data2[,-1]
rownames(data3) <- data1[,1]
View(data3)
print(data)
plot(line)
head(data)
summary(data)
data1 <- read.csv('agg_data_2.csv')
data2 <- data.frame(data1)
data3 <-data2[,-1]
rownames(data) <- data1[,1]
print(data)
data1 <- read.csv('agg_data_2.csv')
data2 <- data.frame(data1)
print(data2)
View(data2)
summary(data2)
data1 <- read.csv('agg_data_2.csv')
data2 <- data.frame(data1)
motion <- gvisMotionChart(data, idvar=)
data1 <- read.csv('agg_data_2.csv')
data2 <- data.frame(data1)
motion <- gvisMotionChart(data, idvar="Total.first.time..first.year.men.who.applied", timevar="year")
plot(motion)
data1 <- read.csv('agg_data_2.csv')
data2 <- data.frame(data1)
motion <- gvisMotionChart(data, idvar="Total.first.time..first.year.men.who.applied", timevar="Year")
plot(motion)
data1 <- read.csv('agg_data_2.csv')
data2 <- data.frame(data1)
motion <- gvisMotionChart(data2, idvar="Total.first.time..first.year.men.who.applied", timevar="Year")
plot(motion)
summary(data2)
data1 <- read.csv('agg_data_2.csv')
data2 <- data.frame(data1)
motion <- gvisMotionChart(data2, idvar="Total.first.time..first.year.men.who.applied", timevar="X")
plot(motion)
data1 <- read.csv('agg_data_2.csv')
data2 <- data.frame(data1)
motion <- gvisMotionChart(data2, idvar="Total.first.time..first.year.men.who.applied", timevar="X")
plot(motion)
data1 <- read.csv('agg_data_2.csv')
data2 <- data.frame(data1)
motion <- gvisMotionChart(data2, idvar="Number.of.qualified.applicants.placed.on.waiting.list", timevar="X")
plot(motion)
data1 <- read.csv('agg_data_2.csv')
data2 <- data.frame(data1)
motion <- gvisMotionChart(data2, timevar="X")
plot(motion)
data1 <- read.csv('agg_data_2.csv')
data2 <- data.frame(data1)
motion <- gvisMotionChart(data2, idvar="X", timevar="X")
plot(motion)
data1 <- read.csv('agg_data_2.csv')
data2 <- data.frame(data1)
motion <- gvisMotionChart(data2, idvar="X", timevar="X")
plot(motion)
motion <- gvisMotionChart(data2, idvar="Class", timevar="X")
data1 <- read.csv('agg_data_3.csv')
data2 <- data.frame(data1)
motion <- gvisMotionChart(data2, idvar="Class", timevar="X")
plot(motion)
View(data2)
summary(data2)
data <- read.csv('agg_data_3.csv')
motion <- gvisMotionChart(data, idvar="Class", timevar="X")
plot(motion)
summary(dta)
summary(data)
head(data)
data <- read.csv('agg_data_3.csv')
motion = gvisMotionChart(data, idvar="Class", timevar="X")
plot(motion)
data <- read.csv('agg_data_1.csv')
head(data)
summary(data)
data <- read.csv('agg_data_1.csv')
motion = gvisMotionChart(data, timevar="X")
plot(motion)
data <- read.csv('agg_data_1.csv')
summary(data)
data <- read.csv('agg_data_1.csv')
motion = gvisMotionChart(data, timevar="Category")
plot(motion)
data <- read.csv('agg_data_1.csv')
motion = gvisMotionChart(data)
plot(motion)
data <- read.csv('agg_data_2.csv')
motion = gvisMotionChart(data)
plot(motion)
setwd('/users/kelvinabrokwa/documents/repositories/wm-stats-blog/kelvin')
data <- read.csv('agg_data_2.csv')
motion = gvisMotionChart(data)
plot(motion)
setwd('/users/kelvinabrokwa/documents/repositories/wm-stats-blog/kelvin')
data <- read.csv('agg_data_2.csv')
data.long$Year <- factor(data$Year)
View(data.long)
setwd('/users/kelvinabrokwa/documents/repositories/wm-stats-blog/kelvin')
data.wide <- read.csv('agg_data_2.csv', header=TRUE)
data.wide$Year <- factor(data.wide$Year)
View(data.wide)
setwd('/users/kelvinabrokwa/documents/repositories/wm-stats-blog/kelvin')
data.wide <- read.csv('agg_data_2.csv', header=TRUE)
data.wide$Year <- factor(data.wide$Year)
View(data.wide)
library(reshape2)
melt(data.wide, id.vars=c("Year"))
View(data.wide)
setwd('/users/kelvinabrokwa/documents/repositories/wm-stats-blog/kelvin')
data.wide <- read.csv('agg_data_2.csv', header=TRUE)
data.wide$Year <- factor(data.wide$Year)
View(data.wide)
library(reshape2)
data.long <- melt(data.wide, id.vars=c("Year"))
View(data.long)
setwd('/users/kelvinabrokwa/documents/repositories/wm-stats-blog/kelvin')
data.wide <- read.csv('agg_data_2.csv', header=TRUE)
data.wide$Year <- factor(data.wide$Year)
View(data.wide)
library(reshape2)
data.long <- melt(data.wide, id.vars=c("Year"))
View(data.long)
motion = gvisMotionChart(data.long)
plot(motion)
setwd('/users/kelvinabrokwa/documents/repositories/wm-stats-blog/kelvin')
data.wide <- read.csv('agg_data_2.csv', header=TRUE)
data.wide$Year <- factor(data.wide$Year)
View(data.wide)
library(reshape2)
data.long <- melt(data.wide, id.vars=c("Year"))
View(data.long)
motion = gvisMotionChart(data.long, timevar="Year")
plot(motion)
setwd('/users/kelvinabrokwa/documents/repositories/wm-stats-blog/kelvin')
data.wide <- read.csv('agg_data_2.csv', header=TRUE)
data.wide$Year <- factor(data.wide$Year)
View(data.wide)
library(reshape2)
data.long <- melt(data.wide, id.vars=c("Year"))
View(data.long)
motion = gvisMotionChart(data.long, idvar="variable", timevar="Year")
plot(motion)
setwd('/users/kelvinabrokwa/documents/repositories/wm-stats-blog/kelvin')
data.wide <- read.csv('agg_data_2.csv', header=TRUE)
data.wide$Year <- factor(data.wide$Year)
View(data.wide)
library(reshape2)
data.long <- melt(data.wide, id.vars=c("Year"))
View(data.long)
plot(data.long)
plot(data.wide)
plot(data.long)
setwd('/users/kelvinabrokwa/documents/repositories/wm-stats-blog/kelvin')
data.wide <- read.csv('agg_data_2.csv', header=TRUE)
data.wide$Year <- factor(data.wide$Year)
View(data.wide)
library(reshape2)
data.long <- melt(data.wide, id.vars=c("Year"))
View(data.long)
write.csv(data.long, file="agg_data_long.csv")
setwd('/users/kelvinabrokwa/documents/repositories/wm-stats-blog/kelvin')
data.long <- read.csv('agg_data_long.csv', header=TRUE)
summary(data.long)
setwd('/users/kelvinabrokwa/documents/repositories/wm-stats-blog/kelvin')
data.long <- read.csv('agg_data_long.csv', header=TRUE)
motion = gvisMotionChart(data.long, idvar="variable", timevar="Year")
plot(motion)
setwd('/users/kelvinabrokwa/documents/repositories/wm-stats-blog/kelvin')
data.long <- read.csv('agg_data_long.csv', header=TRUE)
motion = gvisMotionChart(data.long, idvar="variable", timevar="Year")
plot(motion)
setwd('/users/kelvinabrokwa/documents/repositories/wm-stats-blog/kelvin')
data.long <- read.csv('agg_data_long.csv', header=TRUE)
motion = gvisMotionChart(data.long, idvar="variable", timevar="Year")
plot(motion)
setwd('/users/kelvinabrokwa/documents/repositories/wm-stats-blog/kelvin')
data.long <- read.csv('agg_data_long.csv', header=TRUE)
motion = gvisMotionChart(data.long, idvar="variable", timevar="Year")
plot(motion)
setwd('/users/kelvinabrokwa/documents/repositories/wm-stats-blog/kelvin')
data.long <- read.csv('agg_data_long.csv', header=TRUE)
motion = gvisMotionChart(data.long, idvar="variable", timevar="Year")
plot(motion)
setwd('/users/kelvinabrokwa/documents/repositories/wm-stats-blog/kelvin')
data.long <- read.csv('agg_data_long.csv', header=TRUE)
motion = gvisMotionChart(data.long, idvar="variable", timevar="Year")
plot(motion)
setwd('/users/kelvinabrokwa/documents/repositories/wm-stats-blog/kelvin')
data.long <- read.csv('agg_data_long.csv', header=TRUE)
motion = gvisMotionChart(data.long, idvar="variable", timevar="Year")
plot(motion)
